%\VignetteIndexEntry{Conversion of R regression output to LaTeX tables}
%\VignetteDepends{}
%\VignetteKeywords{regression, lme, ergm, table, LaTeX, typesetting}
%\VignettePackage{texreg}
\documentclass[a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage{booktabs}
\usepackage{dcolumn}
\usepackage{rotating}
\usepackage{geometry}
\geometry{margin=3cm}
\usepackage[pdfpagelabels,bookmarks]{hyperref}
\hypersetup{
  pdftitle={texreg},
  pdfauthor={Philip Leifeld},
  pdfsubject={R package vignette},
  breaklinks=true,
  colorlinks=true,
  urlcolor=blue,
  linkcolor=blue,
  citecolor=red,
  bookmarksnumbered
}

\title{\TeX reg: Conversion of R regression output to \LaTeX\ tables}
\author{Philip Leifeld $<$\href{mailto:philip.leifeld@eawag.ch}{philip.leifeld@eawag.ch}$>$}

\begin{document}

\maketitle

\section{Motivation}
The \TeX reg package for the statistical computing environment R was designed to convert regression model output from multiple models into tables for inclusion in \LaTeX\ documents.
It is an alternative to packages like \texttt{xtable}, \texttt{apsrtable}, \texttt{outreg} and \texttt{memsic}, which can also convert R tables to \LaTeX\ tables.
Only a subset of these packages is able to merge multiple regression models in a single table.
Those packages which can do this do not support important model types such as \texttt{lme} (linear mixed effects models) and \texttt{ergm} objects (exponential random graph models from the \href{http://www.statnet.org}{statnet} suite of packages).
\TeX reg, in contrast, accepts these model types and can also merge multiple models in a single table.
Currently, \texttt{lm}, \texttt{lme}, \texttt{gls}, \texttt{glm} and \texttt{ergm} objects are supported.
New model types can be easily implemented (see section \ref{templates}).
\TeX reg can be used within Sweave.
\LaTeX\ packages for creating fancy tables, like \texttt{dcolumn} or \texttt{booktabs}, are supported.


\section{Installation}
It should be possible to install \TeX reg using a simple command:
<<results=hide, eval=FALSE>>=
install.packages("texreg")
@
If this is not possible for some reason, the source files and binaries can be downloaded from \url{http://r-forge.r-project.org/projects/texreg/}.
To load the package in R once it has been installed, enter the following command:
<<results=hide>>=
library(texreg)
@

\section{Getting help}\label{help}
This R package vignette is part of the \TeX reg package.
It can be displayed in R by entering the command:
<<results=hide>>=
vignette("texreg")
@
The help page of the package can be displayed as follows:
<<results=hide>>=
help(package="texreg")
@
More specific help on the \texttt{texreg} command can be obtained by entering the following command once the package has been loaded:
<<results=hide>>=
help(texreg)
@
If all else fails, more help can be obtained from the homepage of the \TeX reg package.
Questions can be posted to a public forum at \url{http://r-forge.r-project.org/projects/texreg/}.
A prior registration may be required.

\section{\TeX reg examples}
Suppose you fit two simple OLS models.
The following example was taken from the \texttt{lm()} help file.
<<>>=
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2,10,20, labels=c("Ctl","Trt"))
weight <- c(ctl, trt)
m1 <- lm(weight ~ group)
m2 <- lm(weight ~ group - 1) # omitting intercept
@
The coefficients, standard errors, $p$ values etc. can be displayed as follows:
<<>>=
summary(m2)
@
Now it is fairly tedious to copy every single coefficient and standard error to a \LaTeX\ table when you design your academic paper.
To improve the situation, the following commands can do this automatically (the \LaTeX\ output code is shown below the R code, and the resulting table is shown in table \ref{tab:1}):
<<>>=
library(texreg)
table <- texreg(m2)
@
<<echo=FALSE,results=tex>>=
table <- texreg(m2, use.packages=FALSE, label="tab:1")
@

The table is saved in the object \texttt{table}.
Moreover, it is printed directly to the R console for easy copy \& paste.
In order to print it to the R console again, the following command can be used:
<<results=hide>>=
cat(table)
@
The \texttt{texreg} command also accepts multiple models as a \texttt{list} and merges them in a table.
The output of the following command is shown in table \ref{tab:2}.
<<eval=FALSE>>=
table <- texreg(list(m1,m2))
@
<<results=tex,echo=FALSE>>=
table <- texreg(list(m1,m2), use.packages=FALSE, label="tab:2")
@

The \TeX reg package contains many customizations.
Among other options, the \texttt{use.packages} argument can be used to switch off package loading at the beginning of the table code.
Using the \texttt{label} argument, the label of the table can be set.
In a similar way, the \texttt{caption} argument takes care of the caption.
Activating the \texttt{scriptsize} option prints the table in a smaller font size.
The \texttt{sideways} argument rotates the table by 90 degrees and uses the \texttt{rotating} package and the \texttt{sidewaystable} environment.
The position of the table on the page or in the document can be specified using the \texttt{float.pos} argument.
The \texttt{custom.names} and \texttt{model.names} arguments can be used to specify the names of the model terms and the models, respectively.
An example:
<<results=tex>>=
table <- texreg(list(m1, m2), use.packages=FALSE, label="tab:3", caption="My regression table", scriptsize=TRUE, custom.names=c("(Intercept)", "Treatment", "Control"), model.names=c("First model", "Second model"), float.pos="b")
@
The output of this command is shown as table \ref{tab:3}.
Another argument is \texttt{table}.
By deactivating it, the plain \texttt{tabular} environment is printed, and the whole table environment and header is omitted from the output.
This may be useful for integrating tables in Sweave, or for tweaking the floating environment of the table.
The \texttt{no.margin} argument can be used to control the cell spacing of the table.
If set to \texttt{TRUE}, regular margins are used.
By default, no margins are used in order not to waste any horizontal space on the page.

\TeX reg employs functions from the \texttt{booktabs} and \texttt{dcolumn} packages to generate beautiful tables.
If these packages should not be used when generating tables, the arguments \texttt{booktabs} and \texttt{dcolumn}, respectively, can be set to \texttt{FALSE}.

The \TeX reg package can also handle \texttt{ergm} objects (that is, exponential random graph models, which are used in social network analysis).
Here is an example:
the following code creates a network matrix.
<<>>=
mat <- rbinom(400,1,0.16)  #create a matrix
mat <- matrix(mat, nrow=20)
@
Using the \texttt{network} package, the matrix can be converted into a network object.
The \texttt{ergm()} command from the \texttt{ergm} package can be used to fit some models:
<<results=hide>>=
library(network)
library(ergm)
nw <- network(mat)
m4 <- ergm(nw ~ edges)
m5 <- ergm(nw ~ edges + mutual)
m6 <- ergm(nw ~ edges + mutual + twopath)
@
The \TeX reg command can then be used to create a table with the coefficients.
Switching on \texttt{strong.signif} returns the significance levels used by the \texttt{ergm} package (three stars for $p$ values smaller than $0.001$ etc.) instead of using conventional significance stars:
<<results=tex>>=
table <- texreg(list(m4, m5, m6), use.packages=FALSE, label="tab:4", scriptsize=FALSE, strong.signif=TRUE)
@
Table \ref{tab:4} shows the result of this command.

Most academic journals require tables where the coefficient and the standard error are stored in two separate rows of the table, as shown in tables~\ref{tab:1} to~\ref{tab:4}.
In some situations, however, it makes sense to accommodate them in a single row.
The \texttt{single.row} argument can take care of this:
<<results=tex>>=
table <- texreg(list(m4, m5, m6), use.packages=FALSE, label="tab:5", single.row=TRUE)
@
The result is shown in table \ref{tab:5}.
Note the difference between tables \ref{tab:4} and \ref{tab:5}.

The \TeX reg command can also combine the output of different model types in a single table.
Consider the following example of an \texttt{lm} object, an \texttt{lme} (linear mixed-effects) model and an \texttt{ergm} object:
<<results=hide>>=
library(nlme)
m3 <- lme(distance ~ age + Sex, data = Orthodont, random = ~ 1)
@
<<results=tex>>=
table <- texreg(list(m3, m2, m6), label="tab:6", use.packages=FALSE)
@
The output is shown in table \ref{tab:6}.
Note that different model types may report different kinds of goodness-of-fit statistics at the bottom of the table.

\section{Creating templates for new model types}\label{templates}
Currently, \TeX reg supports \texttt{lm}, \texttt{lme}, \texttt{gls}, \texttt{glm} and \texttt{ergm} objects.
However, implementing new kinds of statistical models is fairly easy (if you know how to modify R functions).
For any model type, there exists a function which extracts the relevant information from a model.
For example, \texttt{extract.lm()} provides coefficients and goodness-of-fit statistics for \texttt{lm} objects, \texttt{extract.ergm()} provides this information for \texttt{ergm} objects, etc.
Any new function of this kind must return a list with two objects:
\begin{enumerate}
 \item A matrix containing the coefficients. This matrix must have exactly three columns. The first column contains the coefficients, the second column contains the standard errors, and the third column contains the $p$ values for any coefficient. The names of the coefficients or independent variables must be stored as row names of the matrix. Column names do not matter.
 \item A matrix of goodness-of-fit statistics. This matrix must have exactly one column and as many rows as there are gof measures. For example, the \texttt{extract.lm()} function extracts R$^2$, Adj. R$^2$ and Num. obs. They are aggregated in a $3\times 1$ matrix. The row names of this matrix should indicate what is being measured, for instance ``Num. obs.''
\end{enumerate}
The following code is an example.
It shows the \texttt{extract.lme()} function:
\begin{verbatim}
extract.lm <- function(model) {
  
  if (!class(model) == "lm") {
    stop("Internal error: Incorrect model type! Should be an lm object!")
  }
  
  tab <- summary(model)$coef[,-3]       #extract coefficient table
                                        #third column (t values) is omitted
  
  rs <- summary(model)$r.squared        #extract R-squared
  adj <- summary(model)$adj.r.squared   #extract adjusted R-squared
  n <- nobs(model)                      #extract number of observations
  
  gof <- matrix(c(rs, adj, n), ncol=1)  #put gof measures in a 1-column matrix
  row.names(gof) <- c("R$^2$", "Adj. R$^2$", "Num. obs.")  #set row names
  
  table.content <- list(tab, gof)       #put coefficients and gofs in a list
  return(table.content)                 #return the list object
}
\end{verbatim}
After writing a custom function, this function has to be registered in the \texttt{texreg()} function.
There are two locations where the code has to be slightly adjusted.
These two locations are marked by a comment stating ``IMPLEMENT NEW EXTENSIONS HERE''.

If you write such a function, it would be very helpful to post them in the forum (see section \ref{help}) in order to let other users profit from it.
If it works and if you can provide a self-contained example, the code can be implemented in a future version of \TeX reg.
Please send an inquiry if you are interested in joining the \TeX reg project and working directly on the code.

\end{document}
